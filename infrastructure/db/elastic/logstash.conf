input {
 file {
   mode => "tail"
   type => "file"
   path => "/usr/share/logstash/ingest_data/*"
 }
 jdbc {
    type => "message_log"
    jdbc_driver_library => "/usr/share/logstash/ingest_data/postgresql-42.6.1.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://db-tasks-bot-postgres-1:5432/db"
    jdbc_user => "user"
    jdbc_password => "pass"
    clean_run => true
    jdbc_paging_enabled => "true"
    jdbc_page_size => "5"
    schedule => "* * * * *"
    statement => 'select bot.message_id, bot.update_date_time, bot.message_full::text as message
                        from "tasks-bot".message_log bot
                        WHERE bot.update_date_time > :sql_last_value
                        order by bot.update_date_time asc'
    use_column_value => true
    tracking_column_type => "timestamp"
    tracking_column => "update_date_time"
  }
}


filter {
    if [type] == "message_log" {
        mutate {
            copy => { "update_date_time" => "@timestamp" }
            remove_field => [ "update_date_time" ]
        }
    }
}

output {
  stdout {
    codec => rubydebug {
        metadata => true
    }
  }
  if [type] == "message_log" {
    elasticsearch {
       hosts=> "${ELASTIC_HOSTS}"
       index => "tasks-bot"
       user=> "${ELASTIC_USER}"
       password=> "${ELASTIC_PASSWORD}"
       cacert=> "certs/ca/ca.crt"
       doc_as_upsert => true
       action => "update"
       document_id => "%{message_id}"
     }
  }
  if [type] == "file" {
      elasticsearch {
         index => "logstash-%{+YYYY.MM.dd}"
         hosts=> "${ELASTIC_HOSTS}"
         user=> "${ELASTIC_USER}"
         password=> "${ELASTIC_PASSWORD}"
         cacert=> "certs/ca/ca.crt"
       }
  }
}